plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

group 'com.solana'
version '1.1.5'

android {
    namespace 'com.solana.solana'
    compileSdk 34

    defaultConfig {
        minSdkVersion 19
        targetSdk 34
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.21"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.bitcoinj:bitcoinj-core:0.15.10'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.0"
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation ("org.sol4k:sol4k:0.4.0")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact("$buildDir/outputs/aar/solana-release.aar")  {
                builtBy tasks.getByName("assemble")
            }
            artifactId 'solana'
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/ajamaica/Solana.kt"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}